/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define K_UNDO   &kp LC(Z)
#define K_CUT    &kp LC(X)
#define K_COPY   &kp LC(C)
#define K_PASTE  &kp LC(V)

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp GRAVE  &kp N1  &kp N2    &kp N3    &kp N4     &kp N5                            &kp N6  &kp N7     &kp N8     &kp N9    &kp N0    &kp MINUS
&kp ESC    &kp Q   &kp W     &kp E     &kp R      &kp T                             &kp Y   &kp U      &kp I      &kp O     &kp P     &kp BSPC
&kp TAB    &kp A   &kp S     &kp D     &kp F      &kp G                             &kp H   &kp J      &kp K      &kp L     &kp SEMI  &kp SQT
&kp LSHFT  &kp Z   &kp X     &kp C     &kp V      &kp B   &kp C_MUTE    &kp C_MUTE  &kp N   &kp M      &kp COMMA  &kp DOT   &kp FSLH  &kp RSHFT
                   &kp LGUI  &kp LALT  &kp LCTRL  &mo 1   &kp SPACE     &kp RET     &mo 2   &kp RCTRL  &kp RALT   &kp RGUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            bindings = <
&kp GRAVE  &kp EXCL   &kp AT     &kp HASH     &kp DLLR     &kp PRCNT                   &kp CARET  &kp AMPS   &kp ASTERISK   &kp LPAR    &kp RPAR    &kp TILDE
&trans     &kp LBRC   &kp RBRC   &kp LCBR      &kp RCBR     &kp PIPE                    &kp LT     &kp GT     &kp EQUAL      &kp UNDERS  &kp PLUS    &kp BSLH
&trans     &kp SQT    &kp DQT    &kp SEMI      &kp COLON    &kp BACKSLASH               &kp COMMA  &kp DOT    &kp MINUS      &kp KP_PLUS &kp KP_MINUS &trans
&trans     &trans     &trans     &trans        &trans       &trans         &trans &trans &trans     &trans    &trans        &trans     &trans      &trans
              &trans  &trans     &trans        &trans       &trans         &trans  &trans     &trans    &trans        &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4         &trans     &trans    &trans     &trans    &trans    &trans
&trans      &kp HOME      &kp PG_UP     &kp END       &kp DEL       &kp INS              &kp LEFT   &kp DOWN  &kp UP     &kp RIGHT &kp BSPC  &kp RET
&trans      K_UNDO        &kp LC(Y)     K_CUT         K_COPY        K_PASTE              &kp LC(A)  &kp LC(S) &kp LC(F)  &kp LC(D) &trans    &trans
&trans      &trans        &trans        &trans        &trans        &trans     &trans    &trans     &trans    &trans     &trans    &trans    &trans
              &trans      &trans        &trans        &trans        &trans     &trans    &trans     &trans    &trans     &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
